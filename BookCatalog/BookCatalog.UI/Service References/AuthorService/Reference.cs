//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookCatalog.UI.AuthorService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthorService.IAuthorService")]
    public interface IAuthorService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAllAuthors", ReplyAction="http://tempuri.org/IAuthorService/GetAllAuthorsResponse")]
        System.Collections.Generic.List<BookCatalog.Components.ViewModels.AuthorViewModel> GetAllAuthors();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAllAuthors", ReplyAction="http://tempuri.org/IAuthorService/GetAllAuthorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BookCatalog.Components.ViewModels.AuthorViewModel>> GetAllAuthorsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAuthorsCount", ReplyAction="http://tempuri.org/IAuthorService/GetAuthorsCountResponse")]
        int GetAuthorsCount();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAuthorsCount", ReplyAction="http://tempuri.org/IAuthorService/GetAuthorsCountResponse")]
        System.Threading.Tasks.Task<int> GetAuthorsCountAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAuthors", ReplyAction="http://tempuri.org/IAuthorService/GetAuthorsResponse")]
        BookCatalog.UI.AuthorService.GetAuthorsResponse GetAuthors(BookCatalog.UI.AuthorService.GetAuthorsRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAuthors", ReplyAction="http://tempuri.org/IAuthorService/GetAuthorsResponse")]
        System.Threading.Tasks.Task<BookCatalog.UI.AuthorService.GetAuthorsResponse> GetAuthorsAsync(BookCatalog.UI.AuthorService.GetAuthorsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetBooks", ReplyAction="http://tempuri.org/IAuthorService/GetBooksResponse")]
        string GetBooks(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetBooks", ReplyAction="http://tempuri.org/IAuthorService/GetBooksResponse")]
        System.Threading.Tasks.Task<string> GetBooksAsync(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAuthor", ReplyAction="http://tempuri.org/IAuthorService/GetAuthorResponse")]
        BookCatalog.Components.ViewModels.AuthorViewModel GetAuthor(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetAuthor", ReplyAction="http://tempuri.org/IAuthorService/GetAuthorResponse")]
        System.Threading.Tasks.Task<BookCatalog.Components.ViewModels.AuthorViewModel> GetAuthorAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/Manage", ReplyAction="http://tempuri.org/IAuthorService/ManageResponse")]
        int Manage(BookCatalog.Components.ViewModels.AuthorViewModel authorVM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/Manage", ReplyAction="http://tempuri.org/IAuthorService/ManageResponse")]
        System.Threading.Tasks.Task<int> ManageAsync(BookCatalog.Components.ViewModels.AuthorViewModel authorVM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/Delete", ReplyAction="http://tempuri.org/IAuthorService/DeleteResponse")]
        void Delete(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/Delete", ReplyAction="http://tempuri.org/IAuthorService/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int authorId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetTopAuthors", ReplyAction="http://tempuri.org/IAuthorService/GetTopAuthorsResponse")]
        System.Collections.Generic.List<BookCatalog.Components.ViewModels.TopAuthorViewModel> GetTopAuthors(BookCatalog.Components.ViewModels.SearchTopAuthorsViewModel searchModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorService/GetTopAuthors", ReplyAction="http://tempuri.org/IAuthorService/GetTopAuthorsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<BookCatalog.Components.ViewModels.TopAuthorViewModel>> GetTopAuthorsAsync(BookCatalog.Components.ViewModels.SearchTopAuthorsViewModel searchModel);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuthors", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAuthorsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.Dictionary<string, System.ComponentModel.ListSortDirection> sorts;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public System.Collections.Generic.List<BookCatalog.Infrastructure.Filtration.CustomFilter> filters;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=2)]
        public int take;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=3)]
        public int skip;
        
        public GetAuthorsRequest() {
        }
        
        public GetAuthorsRequest(System.Collections.Generic.Dictionary<string, System.ComponentModel.ListSortDirection> sorts, System.Collections.Generic.List<BookCatalog.Infrastructure.Filtration.CustomFilter> filters, int take, int skip) {
            this.sorts = sorts;
            this.filters = filters;
            this.take = take;
            this.skip = skip;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetAuthorsResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetAuthorsResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.Collections.Generic.List<BookCatalog.Components.ViewModels.AuthorViewModel> GetAuthorsResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int total;
        
        public GetAuthorsResponse() {
        }
        
        public GetAuthorsResponse(System.Collections.Generic.List<BookCatalog.Components.ViewModels.AuthorViewModel> GetAuthorsResult, int total) {
            this.GetAuthorsResult = GetAuthorsResult;
            this.total = total;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorServiceChannel : BookCatalog.UI.AuthorService.IAuthorService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorServiceClient : System.ServiceModel.ClientBase<BookCatalog.UI.AuthorService.IAuthorService>, BookCatalog.UI.AuthorService.IAuthorService {
        
        public AuthorServiceClient() {
        }
        
        public AuthorServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<BookCatalog.Components.ViewModels.AuthorViewModel> GetAllAuthors() {
            return base.Channel.GetAllAuthors();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BookCatalog.Components.ViewModels.AuthorViewModel>> GetAllAuthorsAsync() {
            return base.Channel.GetAllAuthorsAsync();
        }
        
        public int GetAuthorsCount() {
            return base.Channel.GetAuthorsCount();
        }
        
        public System.Threading.Tasks.Task<int> GetAuthorsCountAsync() {
            return base.Channel.GetAuthorsCountAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BookCatalog.UI.AuthorService.GetAuthorsResponse BookCatalog.UI.AuthorService.IAuthorService.GetAuthors(BookCatalog.UI.AuthorService.GetAuthorsRequest request) {
            return base.Channel.GetAuthors(request);
        }
        
        public System.Collections.Generic.List<BookCatalog.Components.ViewModels.AuthorViewModel> GetAuthors(System.Collections.Generic.Dictionary<string, System.ComponentModel.ListSortDirection> sorts, System.Collections.Generic.List<BookCatalog.Infrastructure.Filtration.CustomFilter> filters, int take, int skip, out int total) {
            BookCatalog.UI.AuthorService.GetAuthorsRequest inValue = new BookCatalog.UI.AuthorService.GetAuthorsRequest();
            inValue.sorts = sorts;
            inValue.filters = filters;
            inValue.take = take;
            inValue.skip = skip;
            BookCatalog.UI.AuthorService.GetAuthorsResponse retVal = ((BookCatalog.UI.AuthorService.IAuthorService)(this)).GetAuthors(inValue);
            total = retVal.total;
            return retVal.GetAuthorsResult;
        }
        
        public System.Threading.Tasks.Task<BookCatalog.UI.AuthorService.GetAuthorsResponse> GetAuthorsAsync(BookCatalog.UI.AuthorService.GetAuthorsRequest request) {
            return base.Channel.GetAuthorsAsync(request);
        }
        
        public string GetBooks(int authorId) {
            return base.Channel.GetBooks(authorId);
        }
        
        public System.Threading.Tasks.Task<string> GetBooksAsync(int authorId) {
            return base.Channel.GetBooksAsync(authorId);
        }
        
        public BookCatalog.Components.ViewModels.AuthorViewModel GetAuthor(int id) {
            return base.Channel.GetAuthor(id);
        }
        
        public System.Threading.Tasks.Task<BookCatalog.Components.ViewModels.AuthorViewModel> GetAuthorAsync(int id) {
            return base.Channel.GetAuthorAsync(id);
        }
        
        public int Manage(BookCatalog.Components.ViewModels.AuthorViewModel authorVM) {
            return base.Channel.Manage(authorVM);
        }
        
        public System.Threading.Tasks.Task<int> ManageAsync(BookCatalog.Components.ViewModels.AuthorViewModel authorVM) {
            return base.Channel.ManageAsync(authorVM);
        }
        
        public void Delete(int authorId) {
            base.Channel.Delete(authorId);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int authorId) {
            return base.Channel.DeleteAsync(authorId);
        }
        
        public System.Collections.Generic.List<BookCatalog.Components.ViewModels.TopAuthorViewModel> GetTopAuthors(BookCatalog.Components.ViewModels.SearchTopAuthorsViewModel searchModel) {
            return base.Channel.GetTopAuthors(searchModel);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<BookCatalog.Components.ViewModels.TopAuthorViewModel>> GetTopAuthorsAsync(BookCatalog.Components.ViewModels.SearchTopAuthorsViewModel searchModel) {
            return base.Channel.GetTopAuthorsAsync(searchModel);
        }
    }
}
