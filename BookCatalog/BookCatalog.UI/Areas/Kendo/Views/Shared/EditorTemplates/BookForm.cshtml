@model BookCatalog.Components.ViewModels.BookViewModel

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="form-group">
    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control col-md-9" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.PublishedDate, htmlAttributes: new { @class = "control-label col-md-1", @type = "datetime" })
    <div class="col-md-10">
        @(Html.Kendo().DatePickerFor(model => model.PublishedDate).Format("MM/dd/yyyy").Max(DateTime.Now.Date).HtmlAttributes(new { @class = "form-control col-md-10" }))
        @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.PagesCount, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        @(Html.Kendo().NumericTextBoxFor(model => model.PagesCount).Name("PagesCount").Min(1).Max(20000).Step(1).Value(150).Decimals(0).Format("#"))
        @Html.ValidationMessageFor(model => model.PagesCount, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        @(Html.Kendo().NumericTextBoxFor(model => model.Rating).Name("Rating").Min(1).Max(5).Step(1).Value(3).Decimals(0).Format("#"))
        @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        @(Html.Kendo().EditorFor(model => model.Description)
            .Name("Description")
            .Encode(false)
            .HtmlAttributes(new { @class = "form-control col-md-9" })
            .Tools(tools => tools.InsertImage().InsertFile())
            .ImageBrowser(imageBrowser => imageBrowser
                .Image("~/Content/UserFiles/Images/{0}")
                .Read("Read", "ImageBrowser")
                .Create("Create", "ImageBrowser")
                .Destroy("Destroy", "ImageBrowser")
                .Upload("Upload", "ImageBrowser")
                .Thumbnail("Thumbnail", "ImageBrowser"))
            .FileBrowser(fileBrowser => fileBrowser
                .File("~/Content/UserFiles/Files/{0}")
                .Read("Read", "FileBrowser")
                .Create("Create", "FileBrowser")
                .Destroy("Destroy", "FileBrowser")
                .Upload("Upload", "FileBrowser")
            ))
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(model => model.AuthorsIds, htmlAttributes: new { @class = "control-label col-md-1" })
    <div class="col-md-10">
        @if (Model.Id == 0)
        {
            @(Html.Kendo().MultiSelectFor(model => model.AuthorsIds).Name("AuthorsIds").BindTo(Model.AuthorsOptions)
                .DataTextField("Text").DataValueField("Value").Placeholder("Choose an author...").Value(null).ValuePrimitive(true)
                .AutoBind(false))            
        }
        else
        {
            @(Html.Kendo().MultiSelectFor(model => model.AuthorsIds).Name("AuthorsIds").BindTo(Model.AuthorsOptions)
                .DataTextField("Text").DataValueField("Value").Placeholder("Choose an author...").Value(Model.Authors.Select(author => author.Id)).ValuePrimitive(true)
                .AutoBind(false))
        }
        @Html.ValidationMessageFor(model => model.AuthorsIds, "", new { @class = "text-danger" })
    </div>
</div>
