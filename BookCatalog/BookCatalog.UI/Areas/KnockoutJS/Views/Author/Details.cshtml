@model BookCatalog.Components.ViewModels.AuthorViewModel

@{
    ViewBag.Title = Model.FirstName + " " + Model.SecondName;
}

<h2>Author Details</h2>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.FirstName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FirstName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SecondName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SecondName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BooksCount)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.BooksCount)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Books)
        </dt>

        <dd>
            @foreach (var book in Model.Books)
            {
                @Html.DisplayFor(modelItem => book.Name) @(", ") @Html.DisplayFor(modelItem => book.Year) <br />
            }
        </dd>
    </dl>
</div>
@(Html.Kendo().Chart(Model.Books)
        .Name("Books")
                .Title(title => title
                    .Text("Books' rating")
                    .Position(ChartTitlePosition.Top))
        .Series(series =>
        {
            series.Column(valueExpression: model => model.Rating, categoryExpression: model => model.Name);
        })
        .CategoryAxis(axis => axis
            .Categories(model => model.Name)
            .Title(title => title.Text("Book Name"))
            .Crosshair(crosshair => crosshair
                .Visible(true)
            )
            .Name("Name")
        )
        .ValueAxis(axis => axis.Numeric()
            .Labels(labels => labels.Format("{0}"))
            .Title(title => title.Text("Rating"))
            .Crosshair(crosshair => crosshair
                .Visible(true)
            )
            .Min(1)
            .Max(5)
            .Name("Rating")
        )
        .Legend(legend => legend
            .Visible(true).Position(ChartLegendPosition.Right)
        )
        .ChartArea(chart => chart
            .Background("transparent")
         )
         .Zoomable(true)
         .Tooltip(true)
)
<p>
    @Html.ActionLink("Back to List", "Index", "Author", new { area = "MVC" }, null)
</p>
