@model IEnumerable<BookCatalog.BusinessLogic.ViewModels.BookViewModel>
@{
    ViewBag.Title = "Book Catalog";
}
<br />
<div>
    @Html.ActionLink("Download XML file", "GetXMLFile")
    <br />
</div>
<p>
    <input type="button" value="Add" id="CreateBook" class="btn btn-default" />
    <div id="BookForm" style="display:none">        
    </div>
</p>
<table id="booksTable" class="table table-striped table-bordered" cellspacing="0">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PagesCount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Rating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Authors)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PagesCount)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @foreach (var author in item.Authors)
                    {
                        @Html.DisplayFor(modelItem => author.FirstName) @(" ") @Html.DisplayFor(modelItem => author.SecondName) <br />
                    }
                </td>
                <td>
                    <input type="button" value="Edit" id="Edit" onclick="editBook(@item.Id)" class="makealink" /> |
                    @Html.ActionLink("Details", "Details", "Book", new { area = "MVC" }, new { id = item.Id }) |
                    <input type="button" value="Delete" id="Delete" onclick="deleteBook(@item.Id)" class="makealink" />
                </td>
            </tr>
        }
    </tbody>
</table>

<script>
    var isedited = false;
    var booksTable;
    $(document).ready(function () {
        booksTable = $('#booksTable').dataTable({
            "aoColumns": [
                { "sClass": "Id", "mDataProp": "Id" },
                { "sClass": "Name", "mDataProp": "Name" },
                { "sClass": "PublishedDate", "mDataProp": "PublishedDate" },
                { "sClass": "PagesCount", "mDataProp": "PagesCount" },
                { "sClass": "Authors", "mDataProp": "Authors" },
                { "sClass": "Controls", "mDataProp": "Controls" }
            ]
        });
    });
    $("#CreateBook").click(function () {
        if (isedited !=true)
        {
            $.ajax({
                async: true,
                url: '/MVC/Book/AddBookForm'
            }).success(function (content) {
                isedited = true;
                $('#BookForm').attr("style", "");
                $('#BookForm').append(content);
            });
        }
    });
    function editBook(bookId) {
        if (isedited != true)
        {
            $.ajax({
                async: true,
                url: '/MVC/Book/AddBookForm/' + bookId
            }).success(function (content) {
                isedited = true;
                $('#BookForm').attr("style", "");
                $('#BookForm').append(content);
            });
        }
    }
    function deleteBook(bookId) {
        if (confirm("Are you sure, you want to delete this book from catalog?") == true) {
            $.ajax({
                async: true,
                type: 'POST',
                url: '/MVC/Book/Delete/' + bookId
            }).success(function () {
                $( "tr:contains('" + bookId + "')").each(function() {
                    booksTable.fnDeleteRow(this);
                });
            });
        }
    }
</script>